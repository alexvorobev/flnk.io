# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""User data entity"""
type User {
  id: ID

  """User's name"""
  name: String!

  """User's surname"""
  surname: String!

  """User's email"""
  email: String!

  """User role"""
  role: String!

  """Is user blocked flag"""
  isBlocked: Boolean!
}

"""User actions log data"""
type UserLog {
  id: ID

  """Action author"""
  author: User!

  """Action type"""
  action: String!

  """Action entity"""
  entity: String!

  """Action entity data"""
  entityData: String!

  """Action created at"""
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""The main data about the links"""
type Link {
  id: ID

  """
  The id of the link is a random or custom string that should define short id
  """
  hash: String!

  """The path of the link is the url of the link"""
  path: String!

  """Link creator data"""
  user: User

  """The link is active or not"""
  isActive: Boolean

  """The link is blocked or not"""
  isBlocked: Boolean
}

"""User access response"""
type AuthToken {
  """User's auth token"""
  token: String!
}

type Query {
  getLinks: [Link!]
  auth(email: String!, password: String!): AuthToken
  getUsers: [User!]
  me: User
  getLogs(id: Float): [UserLog!]
}

type Mutation {
  createLink(path: String!, hash: String!): Link
  updateLink(updateLinkInput: UpdateLinkInput!): Link
  deleteLink(id: Float!): Link
  signUp(name: String!, surname: String!, email: String!, password: String!): AuthToken
  updateUser(updateUserInput: UpdateUserInput!): User
}

input UpdateLinkInput {
  id: ID
  hash: String
  path: String
  isActive: Boolean
  isBlocked: Boolean
}

input UpdateUserInput {
  id: ID
  name: String
  surname: String
  email: String
  password: String
  newPassword: String
  role: String
  isBlocked: Boolean
}